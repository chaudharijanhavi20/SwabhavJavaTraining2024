package Package;

public class Board<CellState> {
	private final CellState[][] cells;
	private final int size;

	public Board(int size) {
	    this.size = size;
	    cells = new CellState[size][size];
	    for (int i = 0; i < size; i++) {
	        for (int j = 0; j < size; j++) {
	            cells[i][j] = CellState.EMPTY;   

	        }
	    }
	}

	public boolean placeMark(int row, int col, Player player) {
		if (row < 0 || row >= size || col < 0 || col >= size || cells[row][col] != CellState.EMPTY) {
			return false;
		}
		cells[row][col] = player == Player.X ? CellState.X : CellState.O;
		return true;
	}

	public boolean isWinner(Player player) {
	    CellState symbol = player == Player.X ? CellState.X : CellState.O;

	    // Check rows and columns in one loop
	    for (int i = 0; i < size; i++) {
	        if (cells[i][0] == symbol && cells[i][1] == symbol && cells[i][2] == symbol) {
	            return true;
	        }
	        if (cells[0][i] == symbol && cells[1][i] == symbol && cells[2][i] == symbol) {
	            return true;
	        }
	    }

	    // Check diagonals
	    if (cells[0][0] == symbol && cells[1][1] == symbol && cells[2][2] == symbol) {
	        return true;
	    }
	    if (cells[0][2] == symbol && cells[1][1] == symbol && cells[2][0] == symbol) {
	        return true;
	    }

	    return false; 1

	public void display() {
		for (int i = 0; i < size; i++) {
			for (int j = 0; j < size; j++) {
				System.out.print(cells[i][j].getMark() + " ");
			}
			System.out.println();
		}
	}

	public void reset() {
		for (int i = 0; i < size; i++) {
			for (int j = 0; j < size; j++) {
				cells[i][j] = new EmptyCell();
			}
		}
	}
}
