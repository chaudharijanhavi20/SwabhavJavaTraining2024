package Package;

public class Board {
	private final Cell[][] cells;
	private final int size;

	public Board(int size) {
		this.size = size;
		cells = new Cell[size][size];
		for (int i = 0; i < size; i++) {
			for (int j = 0; j < size; j++) {
				cells[i][j] = new EmptyCell();
			}
		}
	}

	public boolean placeMark(int row, int col, Player player) {
		if (row < 0 || row >= size || col < 0 || col >= size || !cells[row][col].isEmpty()) {
			return false;
		}
		cells[row][col] = new OccupiedCell(player);
		return true;
	}

	public boolean hasWinner(Player player) {
		// ... check for win conditions
		return false;
	}

	public boolean isFull() {
		return cells.stream().flatMap(row -> Arrays.stream(row)).noneMatch(cell -> cell == CellState.EMPTY);
	}

	public void display() {
		// ... display the board
	}

	public void reset() {
		for (int i = 0; i < size; i++) {
			for (int j = 0; j < size; j++) {
				cells[i][j] = new EmptyCell();
			}
		}
	}
}
